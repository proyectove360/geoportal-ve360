<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:property-placeholder/>
	<context:annotation-config />

	<beans:import resource="app-security.xml" />
	<beans:import resource="app-factory.xml" />
	<beans:import resource="app-dcat.xml" />
  
	<beans:bean id="geoportalContext" class="com.esri.geoportal.context.GeoportalContext">
		<beans:property name="elasticContext" ref="elasticContext" />
		<beans:property name="harvesterContext" ref="harvesterContext" />
		<beans:property name="supportsApprovalStatus" value="false" />
		<beans:property name="defaultApprovalStatus" value="" /> <!-- optional - approved|reviewed|disapproved|incomplete|posted|draft -->
		<beans:property name="supportsGroupBasedAccess" value="false" />
		<beans:property name="defaultAccessLevel" value="" /> <!-- optional - public|private -->
		<beans:property name="parseGml" value="false" />
	</beans:bean>
<!-- the tokens like ${es_cluster:elasticsearch} ${gpt_indexName:metadata}
represent environment variables that can be used to pass values into a spring configuration context, aka these files
pattern is
${environment_Variable:defaultValue}
Allows you to deploy to a server without having to build a new war file.
see: docs/configureByEnvironmentVariable.md
 -->
	<beans:bean id="elasticContext" class="com.esri.geoportal.lib.elastic.ElasticContextHttp">
		<beans:property name="clusterName" value="${es_cluster:elasticsearch}" />
		<beans:property name="indexName" value="${gpt_indexName:metadata}" />
		<beans:property name="indexNameIsAlias" value="true" />
		<beans:property name="autoCreateIndex" value="true" />
		<beans:property name="allowFileId" value="false" />
		<beans:property name="mappingsFile" value="${gpt_mappingsFile:config/elastic-mappings.json}" />
		<beans:property name="mappingsFile7" value="${gpt_mappingsFile:config/elastic-mappings-7.json}" />
		<beans:property name="httpPort" value="9200" />
		<beans:property name="transportPort" value="9300" />
		<beans:property name="proxyBufferSize" value="8192" />
		
		<!-- complete the following if you have x-pack security enabled,
		     see https://www.elastic.co/guide/en/x-pack/current/java-clients.html -->
		<!-- 
		<beans:property name="useHttps" value="false" />
		<beans:property name="xpackUsername" value="" />
		<beans:property name="xpackPassword" value="" />
		<beans:property name="xpackHttpType" value="" />
		<beans:property name="xpackTransportType" value="" />
		<beans:property name="xpackSecurityTransportSslEnabled" value="false" />
		<beans:property name="xpackSslKey" value="" />
		<beans:property name="xpackSslCertificate" value="" />
		<beans:property name="xpackSslCertificateAuthorities" value="" />
		 -->
 
		<beans:property name="nodes">
			<!-- The list of host names within the Elasticsearch cluster, one value element per host -->
			<beans:list>
				<beans:value>${es_node:localhost}</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="harvesterContext" class="com.esri.geoportal.lib.harvester.HarvesterContext">
		<beans:property name="nodes">
			<!-- The list of host names within the Harvester cluster, one value element per host -->
			<beans:list>
				<beans:value>${harvester_node:}</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	 
</beans:beans>
